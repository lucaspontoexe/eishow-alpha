{"version":3,"sources":["assets/logo.svg","assets/back.svg","assets/eishow-lite.webm","components/Button.jsx","pages/HomeScreen/index.jsx","pages/VideoPage/index.jsx","routes.jsx","serviceWorker.js","index.js","App.jsx"],"names":["module","exports","Button","children","background","textColor","onClick","style","color","HomeScreen","history","onClickDisabledButton","navigator","vibrate","className","src","logo","alt","push","VideoPage","back","goBack","role","aria-label","video","controls","textAlign","Routes","basename","process","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d26ce5d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8e3bf7af.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.eeccebcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/eishow-lite.45520ac9.webm\";","import React from 'react'\r\nimport './Button.css'\r\n// todo: use styled components\r\n\r\nexport default function Button({ children, background, textColor, onClick }) {\r\n    return (\r\n        <button style={{ background }} onClick={onClick}>\r\n            <span style={{ color: textColor }}> {children} </span>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from 'components/Button'\r\n\r\nimport './style.css'\r\nimport logo from 'assets/logo.svg';\r\n\r\nexport default function HomeScreen({ history }) {\r\n\r\n    function onClickDisabledButton() {\r\n        navigator.vibrate(100);\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <img src={logo} alt=\"eishow logo\" />\r\n            {/* escuro = 008D0E, claro = 64C66E */}\r\n            <Button background=\"#64C66E\" textColor=\"white\" onClick={() => history.push('/video')}>Ciências Humanas</Button>\r\n            <Button background=\"#cccccc\" textColor=\"white\" onClick={onClickDisabledButton}>Ciências Naturais</Button>\r\n            <Button background=\"#cccccc\" textColor=\"white\" onClick={onClickDisabledButton}>Matemática</Button>\r\n            <Button background=\"#cccccc\" textColor=\"white\" onClick={onClickDisabledButton}>Língua Portuguesa</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\n\nimport './style.scss'\nimport back from 'assets/back.svg'\nimport video from 'assets/eishow-lite.webm'\n\nexport default function VideoPage({ history }) {\n    return (\n        <div className=\"video-page\">\n            <div className=\"video-container\">\n                <img \n                src={back} alt=\"Voltar\" \n                onClick={() => history.goBack()}\n                role=\"button\"\n                aria-label=\"Voltar\" />\n                <video src={video} controls></video>\n            </div>\n\n            <div className=\"text-container\">\n                                \n                <h1>Eishow - Ciências Humanas</h1>\n                <section>\n                    <p>O intuito do nosso trabalho é mostrar trabalhos que são importantíssimos para a sociedade e o ambiente em que vivemos, mas nem sempre é dado o certo valor necessário.</p>\n                    <p>Muitas dessas pessoas não têm uma vida fácil, então a última coisa que elas querem é se sentirem mal acolhidas.</p>\n                    <p>Muita gente não enxerga isso e pensa: \"Vou fazer tal coisa porque a tia vai limpar\". Certo que é o trabalho delas, mas tenham mais consideração pelo próximo.</p>\n                    <p>Não é num passe de mágica que o lixo sai da sua lixeira, que a sua escola fica arrumada e as coisas limpas, lembrem do suor desses trabalhadores para nós oferecer conforto e limpeza, pensem no próximo.</p>\n                    <p>Fizemos esta entrevista com uma ex-funcionária do SESI onde ela contou um pouco sobre sua opinião de como foi. Hoje ela cursa educação física.</p>\n                    <p>Muito obrigado por baixar o app e até o próximo trabalho.</p>\n                    <p style={{textAlign: \"right\"}}>- Equipe Eishow ;)</p>\n                </section>\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomeScreen from './pages/HomeScreen'\nimport VideoPage from './pages/VideoPage'\n\nexport default function Routes() {\n    return ( \n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/\" exact component={HomeScreen} />\n                <Route path=\"/eishow-alpha\" exact component={HomeScreen} />\n                <Route path=\"/video\" component={VideoPage} />\n            </Switch>\n        </HashRouter>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react'\nimport Routes from 'routes'\n\nexport default function App() {\n    return (\n        <div>\n            <Routes>\n\n            </Routes>\n        </div>\n    )\n}\n"],"sourceRoot":""}